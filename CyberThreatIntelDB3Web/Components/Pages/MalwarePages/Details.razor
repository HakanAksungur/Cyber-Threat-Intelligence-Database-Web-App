@page "/malwares/details"
@using Microsoft.EntityFrameworkCore
@using DataAccess
@inject IDbContextFactory<CyberThreatIntelDB3Web.Data.CyberThreatIntelDB3WebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Malware</h2>
    <hr />
    @if (malware is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Signature</dt>
            <dd class="col-sm-10">@malware.Signature</dd>
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@malware.Type</dd>
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@malware.Name</dd>
            <dt class="col-sm-2">AttackID</dt>
            <dd class="col-sm-10">@malware.AttackID</dd>
        </dl>
        <div>
            <a href="@($"/malwares/edit?malwareid={malware.MalwareID}")">Edit</a> |
            <a href="@($"/malwares")">Back to List</a>
        </div>
    }
</div>

@code {
    private Malware? malware;

    [SupplyParameterFromQuery]
    private int MalwareID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        malware = await context.Malware.FirstOrDefaultAsync(m => m.MalwareID == MalwareID);

        if (malware is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
